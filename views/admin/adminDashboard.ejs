<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Eon Forge - Admin Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#4361ee',
            'primary-dark': '#3a56d4',
            secondary: '#3f37c9',
            success: '#4cc9f0',
            danger: '#f72585',
            warning: '#f8961e',
            info: '#4895ef',
          }
        }
      }
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .account-dropdown { display: none; }
    .account-wrapper:hover .account-dropdown { display: block; }
    .sidebar-menu a.active { background-color: rgba(255, 255, 255, 0.1); }
    .stat-card { transition: all 0.3s ease; }
    .stat-card:hover { transform: translateY(-4px); box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); }
    .chart-container { position: relative; height: 400px; }
    
    /* Mobile sidebar styles */
    .sidebar-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 40;
      display: none;
    }
    
    .sidebar-overlay.active {
      display: block;
    }
    
    /* Responsive table styles */
    @media (max-width: 768px) {
      .responsive-table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
      }
    }
  </style>
</head>
<body class="font-sans bg-gray-50 text-gray-900 overflow-x-hidden">
  <!-- Mobile Sidebar Overlay -->
  <div class="sidebar-overlay" id="sidebarOverlay"></div>
  
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include("../../views/partials/admin/sidebar") %>

    <!-- Main Content -->
    <div class="flex-1 lg:ml-64 min-h-screen w-full">
      <!-- Header -->
      <header class="bg-white py-4 px-6 flex justify-between items-center shadow sticky top-0 z-40">
        <div class="flex items-center">
          <button class="lg:hidden mr-4 text-gray-700" id="openSidebar">
            <i class="fas fa-bars text-xl"></i>
          </button>
          <h1 class="text-xl font-semibold text-gray-800">Dashboard Overview</h1>
          <div class="ml-4 text-sm text-gray-500 hidden md:block">
            <i class="fas fa-calendar-alt mr-1"></i>
            <%= new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %>
          </div>
        </div>
        <div class="flex items-center space-x-4">
          <button id="download-ledger" class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary-dark transition-colors w-full sm:w-auto">
                <i class="fas fa-download mr-2"></i>Download Ledger
              </button>
          <input type="date" id="dashboard-date" class="px-3 py-2 rounded-lg border border-gray-300 text-sm hidden md:block">
          <div class="account-wrapper relative">
            <button class="bg-transparent border-none cursor-pointer text-xl text-gray-700 hover:text-primary transition-colors" title="Account">
              <i class="fas fa-user"></i>
            </button>
            <div class="account-dropdown absolute right-0 top-full bg-white min-w-40 shadow-lg rounded-md overflow-hidden">
              <a href="/profile" class="block px-4 py-2 text-gray-700 no-underline hover:bg-gray-100">
                <i class="fas fa-user mr-2"></i> Profile
              </a>
              <a href="/admin/logout" class="block px-4 py-2 text-gray-700 no-underline hover:bg-gray-100">
                <i class="fas fa-sign-out-alt mr-2"></i> Logout
              </a>
            </div>
          </div>
        </div>
      </header>
      
      <main class="p-4 lg:p-6">
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-6 lg:mb-8">
          <div class="stat-card bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <div class="flex items-center justify-between">
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-1">Total Sales</h3>
                <p class="text-2xl lg:text-3xl font-bold text-gray-800">â‚¹<span id="total-sales"><%= totalSales.toLocaleString() || '0' %></span></p>
                <p class="text-xs lg:text-sm mt-1" id="sales-change">
                   <i class="fas <%= salesChange >= 0 ? 'fa-arrow-up text-green-600' : 'fa-arrow-down text-red-600' %> mr-1"></i>
                  <span id="sales-change-value"><%= Math.abs(salesChange) %>%</span> from <%= period === 'daily' ? 'yesterday' : period === 'weekly' ? 'last week' : period === 'monthly' ? 'last month' : 'last year' %>
                </p>
              </div>
              <div class="w-12 h-12 lg:w-16 lg:h-16 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 flex items-center justify-center text-white text-xl lg:text-2xl">
                <i class="fas fa-shopping-cart"></i>
              </div>
            </div>
          </div>
          <div class="stat-card bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <div class="flex items-center justify-between">
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-1">New Users</h3>
                <p class="text-2xl lg:text-3xl font-bold text-gray-800"><span id="new-users"><%= newUsersCount || '0' %></span></p>
                <p class="text-xs lg:text-sm mt-1" id="new-users-change">
                  <i class="fas <%= newUsersChange >= 0 ? 'fa-arrow-up text-green-600' : 'fa-arrow-down text-red-600' %> mr-1"></i>
                  <span id="new-users-change-value"><%= Math.abs(newUsersChange) %>%</span> from  <%= period === 'daily' ? 'yesterday' : period === 'weekly' ? 'last week' : period === 'monthly' ? 'last month' : 'last year' %>
                </p>
              </div>
              <div class="w-12 h-12 lg:w-16 lg:h-16 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 flex items-center justify-center text-white text-xl lg:text-2xl">
                <i class="fas fa-users"></i>
              </div>
            </div>
          </div>
          <div class="stat-card bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <div class="flex items-center justify-between">
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-1">Products</h3>
                <p class="text-2xl lg:text-3xl font-bold text-gray-800"><span id="total-products"><%= totalProducts || '0' %></span></p>
                <p class="text-xs lg:text-sm mt-1" id="products-change">
                 <i class="fas <%= productsChange >= 0 ? 'fa-arrow-up text-green-600' : 'fa-arrow-down text-red-600' %> mr-1"></i>
                  <span id="products-change-value"><%= Math.abs(productsChange) %>%</span> from <%= period === 'daily' ? 'yesterday' : period === 'weekly' ? 'last week' : period === 'monthly' ? 'last month' : 'last year' %>
                </p>
              </div>
              <div class="w-12 h-12 lg:w-16 lg:h-16 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 flex items-center justify-center text-white text-xl lg:text-2xl">
                <i class="fas fa-box-open"></i>
              </div>
            </div>
          </div>
          <div class="stat-card bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <div class="flex items-center justify-between">
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-1">Conversion Rate</h3>
                <p class="text-2xl lg:text-3xl font-bold text-gray-800"><span id="conversion-rate"><%= conversionRate || '0' %></span>%</p>
                <p class="text-xs lg:text-sm mt-1" id="conversion-rate-change">
                   <i class="fas <%= conversionRateChange >= 0 ? 'fa-arrow-up text-green-600' : 'fa-arrow-down text-red-600' %> mr-1"></i>
                  <span id="conversion-rate-change-value"><%= Math.abs(conversionRateChange) %>%</span> from <%= period === 'daily' ? 'yesterday' : period === 'weekly' ? 'last week' : period === 'monthly' ? 'last month' : 'last year' %>
                </p>
              </div>
              <div class="w-12 h-12 lg:w-16 lg:h-16 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 flex items-center justify-center text-white text-xl lg:text-2xl">
                <i class="fas fa-chart-line"></i>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Charts Row -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6 lg:mb-8">
          <div class="lg:col-span-2 bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
              <h2 class="text-xl font-semibold text-gray-800">Sales Analytics</h2>
              <div class="flex items-center space-x-3">
                <select id="chart-period" class="px-4 py-2 rounded-lg border border-gray-300 bg-white text-sm">
                  <option value="yearly">Yearly</option>
                  <option value="monthly" selected>Monthly</option>
                  <option value="weekly">Weekly</option>
                  <option value="daily">Daily</option>
                </select>
                <button class="text-gray-500 hover:text-primary">
                  <i class="fas fa-download"></i>
                </button>
              </div>
            </div>
            <div class="chart-container">
              <canvas id="salesChart"></canvas>
            </div>
          </div>
          <div class="bg-white rounded-xl p-4 lg:p-6 shadow-sm">
            <h2 class="text-xl font-semibold text-gray-800 mb-6">Revenue Breakdown</h2>
            <div class="chart-container">
              <canvas id="revenueChart"></canvas>
            </div>
          </div>
        </div>
        
        <!-- Top 10 Sections -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6 lg:mb-8">
          <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <div class="p-4 lg:p-6 border-b border-gray-200">
              <h2 class="text-xl font-semibold text-gray-800">Top 5 Products</h2>
            </div>
            <div class="p-4 lg:p-6">
            <div class="space-y-4">
                <% topProducts.forEach(product => { %>
                  <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                    <div class="flex items-center">
                      <div class="w-12 h-12 rounded-lg overflow-hidden mr-4">
                        <img 
                          src="<%= product.productDetails.colorVariants[0]?.productImage[0] || '/images/no-image.jpg' %>" 
                          alt="product" 
                          class="w-full h-full object-cover"
                        />
                      </div>
                      <div>
                        <h4 class="font-medium text-gray-900 truncate w-40" title="<%= product.productDetails.productName %>">
                          <%= product.productDetails.productName.slice(0,10)+"..." %>
                        </h4>
                        <p class="text-sm text-gray-500">
                          <%= product.categoryDetails.name %> | <%= product.brandDetails.brandName %>
                        </p>
                      </div>
                    </div>
                    <div class="text-right">
                      <p class="font-semibold text-gray-900">
                        â‚¹<%= product.productDetails.colorVariants[0]?.offerPrice || product.productDetails.colorVariants[0]?.regularPrice %>
                      </p>
                      <p class="text-sm text-green-600">
                        Sold: <%= product.totalSold %>
                      </p>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
          </div>
          
          <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <div class="p-4 lg:p-6 border-b border-gray-200">
              <h2 class="text-xl font-semibold text-gray-800">Top 5 Categories</h2>
            </div>
            <div class="p-4 lg:p-6">
             <div class="space-y-4">
                <% topCategories.forEach(category => { %>
                  <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                    <div>
                      <h4 class="font-medium text-gray-900"><%= category.name %></h4>
                      <p class="text-sm text-gray-500"><%= category.salesCount %> items sold</p>
                    </div>
                    <div class="text-right">
                      <p class="font-semibold text-gray-900">
                        â‚¹<%= category.revenue.toLocaleString() %>
                      </p>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
          </div>
          
          <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <div class="p-4 lg:p-6 border-b border-gray-200">
              <h2 class="text-xl font-semibold text-gray-800">Top 5 Brands</h2>
            </div>
            <div class="p-4 lg:p-6">
              <div class="space-y-4">
                <% topBrands.forEach(brand => { %>
                <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                  <div>
                    <h4 class="font-medium text-gray-900"><%= brand.name %></h4>
                    <p class="text-sm text-gray-500"><%= brand.salesCount %> items sold</p>
                  </div>
                  <div class="text-right">
                    <p class="font-semibold text-gray-900">â‚¹<%= brand.revenue.toLocaleString() %></p>
                  </div>
                </div>
                <% }) %>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Ledger Book -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden">
          <div class="p-4 lg:p-6 border-b border-gray-200">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
              <h2 class="text-xl font-semibold text-gray-800">Ledger Book</h2>
              <button id="download-ledger" class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary-dark transition-colors w-full sm:w-auto">
                <i class="fas fa-download mr-2"></i>Download Ledger
              </button>
            </div>
          </div>
          
        </div>
      </main>
    </div>
  </div>

  <form id="ledger-form" style="display: none;">
    <input type="hidden" name="startDate" id="ledger-startDate">
    <input type="hidden" name="endDate" id="ledger-endDate">
    <input type="hidden" name="period" id="ledger-period">
  </form>

  <script>
    // Initialize sidebar toggle FIRST
    document.addEventListener('DOMContentLoaded', function() {
      // Mobile sidebar toggle
      const sidebar = document.getElementById('sidebar');
      const sidebarOverlay = document.getElementById('sidebarOverlay');
      const openSidebarBtn = document.getElementById('openSidebar');
      const closeSidebarBtn = document.getElementById('closeSidebar');
      
      if (openSidebarBtn && sidebar && sidebarOverlay && closeSidebarBtn) {
        openSidebarBtn.addEventListener('click', () => {
          sidebar.classList.remove('-translate-x-full');
          sidebarOverlay.classList.add('active');
        });
        
        closeSidebarBtn.addEventListener('click', () => {
          sidebar.classList.add('-translate-x-full');
          sidebarOverlay.classList.remove('active');
        });
        
        sidebarOverlay.addEventListener('click', () => {
          sidebar.classList.add('-translate-x-full');
          sidebarOverlay.classList.remove('active');
        });
      } else {
        console.error('Sidebar elements not found');
      }

      // Set default date for date input
      const dashboardDate = document.getElementById('dashboard-date');
      if (dashboardDate) {
        dashboardDate.value = new Date().toISOString().split('T')[0];
      }

      // Initialize charts only if canvas elements exist
      initializeCharts();
    });

    // Chart initialization function
    function initializeCharts() {
      // Sales Chart
      const salesCtx = document.getElementById('salesChart');
      if (salesCtx) {
        const salesChart = new Chart(salesCtx, {
          type: 'line',
          data: {
            labels: <%- JSON.stringify(salesLabels || []) %>,
            datasets: [{
              label: 'Sales',
              data: <%- JSON.stringify(salesData || []) %>,
              borderColor: '#4361ee',
              backgroundColor: 'rgba(67, 97, 238, 0.1)',
              borderWidth: 3,
              fill: true,
              tension: 0.4,
              pointBackgroundColor: '#4361ee',
              pointBorderColor: '#ffffff',
              pointBorderWidth: 2,
              pointRadius: 6,
              pointHoverRadius: 8
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: { legend: { display: false } },
            scales: {
              y: {
                beginAtZero: true,
                grid: { color: 'rgba(0, 0, 0, 0.05)' },
                ticks: { callback: function(value) { return 'â‚¹' + value.toLocaleString(); } }
              },
              x: { grid: { display: false } }
            }
          }
        });
      }

      // Revenue Breakdown Chart
      const revenueCtx = document.getElementById('revenueChart');
      if (revenueCtx) {
        const revenueChart = new Chart(revenueCtx, {
          type: 'doughnut',
          data: {
            labels: <%- JSON.stringify(revenueLabels || ['Products', 'Services', 'Subscriptions', 'Other']) %>,
            datasets: [{
              data: <%- JSON.stringify(revenueData || [45, 25, 20, 10]) %>,
              backgroundColor: ['#4361ee', '#4cc9f0', '#f8961e', '#f72585'],
              borderWidth: 0,
              hoverOffset: 4
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: { legend: { position: 'bottom', labels: { padding: 20, usePointStyle: true } } }
          }
        });
      }

      // Set up chart period change handler
      const chartPeriodSelect = document.getElementById('chart-period');
      if (chartPeriodSelect) {
        chartPeriodSelect.addEventListener('change', function() {
          const period = this.value;
          const date = document.getElementById('dashboard-date').value;
          const url = period === 'daily' ? `/admin/chart-data?period=${period}&date=${date}` : `/admin/chart-data?period=${period}`;
          fetchChartData(url, period);
        });
      }

      // Set up date change handler for daily period
      const dashboardDateInput = document.getElementById('dashboard-date');
      if (dashboardDateInput) {
        dashboardDateInput.addEventListener('change', function() {
          const period = document.getElementById('chart-period').value;
          if (period === 'daily') {
            const date = this.value;
            fetchChartData(`/admin/chart-data?period=daily&date=${date}`, period);
          }
        });
      }

      // Set up ledger download handler
      const downloadLedgerBtn = document.getElementById('download-ledger');
      if (downloadLedgerBtn) {
        downloadLedgerBtn.addEventListener('click', function(e) {
          e.preventDefault();
          downloadLedger();
        });
      }

      // Trigger initial fetch for monthly data
      const period = document.getElementById('chart-period').value;
      const date = document.getElementById('dashboard-date').value;
      const url = period === 'daily' ? `/admin/chart-data?period=${period}&date=${date}` : `/admin/chart-data?period=${period}`;
      fetchChartData(url, period);
    }

    // Fetch chart data helper
    function fetchChartData(url, period) {
      console.log('Fetching chart data from:', url);
      fetch(url)
        .then(response => {
          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          console.log('Received chart data:', data);
          if (data.error) {
            console.error('Server error:', data.error);
            alert(`Error: ${data.error}`);
            return;
          }
          
          // Update Sales Chart
          const salesChartCanvas = document.getElementById('salesChart');
          if (salesChartCanvas) {
            const salesChart = Chart.getChart(salesChartCanvas);
            if (salesChart) {
              salesChart.data.labels = data.labels;
              salesChart.data.datasets[0].data = data.values;
              salesChart.update();
            }
          }
          
          // Update Metrics
          document.getElementById('total-sales').textContent = data.totalSales.toLocaleString();
          document.getElementById('new-users').textContent = data.newUsersCount;
          document.getElementById('total-products').textContent = data.totalProducts;
          document.getElementById('conversion-rate').textContent = data.conversionRate + '%';
          
          // Update Percentage Changes
          const periodText = period === 'daily' ? 'yesterday' : period === 'weekly' ? 'last week' : period === 'monthly' ? 'last month' : 'last year';
          updateChange('sales-change', data.salesChange, periodText);
          updateChange('new-users-change', data.newUsersChange, periodText);
          updateChange('products-change', data.productsChange, periodText);
          updateChange('conversion-rate-change', data.conversionRateChange, periodText);
        })
        .catch(error => {
          console.error('Error fetching chart data:', error);
          alert('Failed to load chart data. Please try again.');
        });
    }

    // Helper to update percentage change display
    function updateChange(elementId, change, periodText) {
      const element = document.getElementById(elementId);
      if (element) {
        const isPositive = change >= 0;
        element.innerHTML = `
          <i class="fas ${isPositive ? 'fa-arrow-up text-green-600' : 'fa-arrow-down text-red-600'} mr-1"></i>
          ${Math.abs(change)}% from ${periodText}
        `;
      }
    }

    // Download ledger function
    function downloadLedger() {
      const period = document.getElementById('chart-period').value;
      const date = document.getElementById('dashboard-date').value;
      
      // Set form values based on current chart selection
      document.getElementById('ledger-period').value = period;
      
      if (period === 'daily') {
        // For daily, use the selected date as both start and end
        document.getElementById('ledger-startDate').value = date;
        document.getElementById('ledger-endDate').value = date;
      } else {
        // For other periods, let the server calculate the date range
        document.getElementById('ledger-startDate').value = '';
        document.getElementById('ledger-endDate').value = '';
      }

      const form = document.getElementById('ledger-form');
      const formData = new FormData(form);
      const data = {
        period: formData.get('period'),
        startDate: formData.get('startDate'),
        endDate: formData.get('endDate')
      };

      fetch('/admin/ledger', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
        .then(response => {
          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }
          return response.blob();
        })
        .then(blob => {
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          
          // Generate appropriate filename based on period
          let filename = `ledger-${period}`;
          if (period === 'daily' && data.startDate) {
            filename += `-${data.startDate}`;
          }
          a.download = `${filename}.pdf`;
          
          document.body.appendChild(a);
          a.click();
          a.remove();
          window.URL.revokeObjectURL(url);
        })
        .catch(error => {
          console.error('Error downloading ledger:', error);
          alert('Failed to download ledger. Please try again.');
        });
    }
  </script>
</body>
</html>