<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Addresses</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .glassmorphism {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .address-card {
            transition: all 0.3s ease;
        }

        .address-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

        .modal-backdrop {
            backdrop-filter: blur(4px);
        }

        .input-focus:focus {
            transform: translateY(-1px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen">
    <!-- Header Section -->
    <div class="gradient-bg py-12">
        <div class="container mx-auto px-4">
            <div class="text-center text-white">
                <h1 class="text-3xl font-bold mb-2">Manage Addresses</h1>
                <p class="text-lg opacity-90">Add, edit, and organize your delivery addresses</p>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mx-auto px-4 -mt-6 pb-12">
        <div class="max-w-6xl mx-auto">
            <!-- Header Card -->
            <div class="bg-white rounded-2xl shadow-xl p-8 mb-8">
                <div class="flex flex-col sm:flex-row justify-between items-center gap-4">
                    <div>
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">Your Addresses</h2>
                        <p class="text-gray-600">Manage your delivery locations for faster checkout</p>
                    </div>
                    <button onclick="openAddAddressModal()"
                        class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:from-blue-700 hover:to-purple-700 transition duration-300 font-medium shadow-lg">
                        <i class="fas fa-plus mr-2"></i>Add New Address
                    </button>
                </div>
            </div>

            <!-- Address Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6" id="addressGrid">
                <% if (address && address.address.length> 0) { %>
                    <% address.address.forEach((addr,index)=> { %>
                        <div class="address-card bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
                            <div class="flex justify-between items-start mb-4">
                                <div class="flex items-center space-x-3">
                                    <div class="w-12 h-12 rounded-xl flex items-center justify-center
              <%= addr.type === 'home' ? 'bg-green-100' : addr.type === 'work' ? 'bg-blue-100' : 'bg-purple-100' %>">
                                        <i
                                            class="text-xl
                <%= addr.type === 'home' ? 'fas fa-home text-green-600' : addr.type === 'work' ? 'fas fa-building text-blue-600' : 'fas fa-map-marker-alt text-purple-600' %>">
                                        </i>
                                    </div>
                                    <div>
                                        <h3 class="font-bold text-gray-800 capitalize">
                                            <%= addr.type %>
                                        </h3>
                                        <% if (addr.isDefault) { %>
                                            <span
                                                class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                <i class="fas fa-check-circle mr-1"></i>Default
                                            </span>
                                            <% } else { %>
                                                <span
                                                    class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600">
                                                    Secondary
                                                </span>
                                                <% } %>
                                    </div>
                                </div>
                                <div class="flex space-x-1">
                                    <button
                                        onclick="openEditAddressModal('<%=address._id %>', '<%= addr.street %>', '<%= addr.city %>', '<%= addr.state %>', '<%= addr.pin %>', '<%= addr.country %>', '<%= addr.type %>', '<%= addr.phone  %>')"
                                        class="p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition duration-300">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick='deleteAddress("<%=address._id%>","<%=addr._id%>")'
                                        class="p-2 text-red-600 hover:bg-red-50 rounded-lg transition duration-300">
                                        <i class="fas fa-trash"></i>
                                    </button>

                                </div>
                            </div>    
                            <div class="space-y-2">

                                
                                <p class="text-gray-800 font-medium">
                                    <%= addr.street %>
                                </p>
                                <p class="text-gray-600">
                                    <%= addr.city %>, <%= addr.pin %>
                                </p>
                                <p class="text-gray-600">
                                    <%= addr.state %>, <%= addr.country %>
                                </p>
                                <% if (addr.phone) { %>
                                    <p class="text-gray-600"><i class="fas fa-phone-alt mr-2"></i>
                                        <%= addr.phone %>
                                    </p>
                                    <% } %>
                            </div>
                            <div class="mt-4 pt-4 border-t border-gray-100">
                                <button
                                    class="w-full bg-blue-50 text-blue-600 py-2 rounded-lg hover:bg-blue-100 transition duration-300 font-medium">
                                    <i class="fas fa-map-marker-alt mr-2"></i>View on Map
                                </button>
                            </div>
                        </div>
                        <% }) %>
                            <% } else { %>
                                <!-- Show empty state if no address -->
                                <script>
                                    document.getElementById('emptyState').classList.remove('hidden');
                                </script>
                                <% } %>
            </div>


            <!-- Add Address Modal -->
            <div id="addAddressModal"
                class="hidden fixed inset-0 bg-black bg-opacity-50 modal-backdrop flex items-center justify-center z-50 p-4">
                <div
                    class="bg-white rounded-2xl p-8 w-full max-w-lg shadow-2xl transform transition-all max-h-[90vh] overflow-y-auto">
                    <div class="text-center mb-6">
                        <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-plus text-blue-600 text-2xl"></i>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-800">Add New Address</h3>
                        <p class="text-gray-600 mt-2">Enter your delivery address details</p>
                    </div>

                    <form id="addAddressForm" class="space-y-6" enctype="application/x-www-form-urlencoded">
                        <!-- Address Type -->
                        <div class="space-y-2">
                            <label class="block text-gray-700 font-semibold text-sm uppercase tracking-wide">Address
                                Type</label>
                            <div class="grid grid-cols-3 gap-3">
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="type" value="home" class="sr-only" checked>
                                    <div class="text-center">
                                        <i class="fas fa-home text-green-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Home</p>
                                    </div>
                                </label>
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="type" value="work" class="sr-only">
                                    <div class="text-center">
                                        <i class="fas fa-building text-blue-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Work</p>
                                    </div>
                                </label>
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="type" value="other" class="sr-only">
                                    <div class="text-center">
                                        <i class="fas fa-map-marker-alt text-purple-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Other</p>
                                    </div>
                                </label>
                            </div>
                        </div>

                        <!-- Street Address -->
                        <div class="space-y-2">
                            <label for="street" class="block text-gray-700 font-semibold text-sm">
                                <i class="fas fa-road text-blue-600 mr-2"></i>Street Address
                            </label>
                            <input type="text" id="street" name="street"
                                class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                placeholder="Enter street address" required>
                        </div>

                        <!-- City and State -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="space-y-2">
                                <label for="city" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-city text-blue-600 mr-2"></i>City
                                </label>
                                <input type="text" id="city" name="city"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter city" required>
                            </div>
                            <div class="space-y-2">
                                <label for="state" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-map text-blue-600 mr-2"></i>State
                                </label>
                                <input type="text" id="state" name="state"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter state" required>
                            </div>
                        </div>

                        <!-- pin and Phone Number -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="space-y-2">
                                <label for="pin" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-mail-bulk text-blue-600 mr-2"></i>Pin Code
                                </label>
                                <input type="text" id="pin" name="pin"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter pin code" required>
                            </div>
                            <div class="space-y-2">
                                <label for="phone" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-phone-alt text-blue-600 mr-2"></i>Phone Number
                                </label>
                                <input type="tel" id="phone" name="phone"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="e.g., 9876543210" pattern="[0-9]{10}" required
                                    oninvalid="this.setCustomValidity('Please enter a 10-digit phone number (e.g., 9876543210)')"
                                    oninput="this.setCustomValidity('')">
                                <p class="text-gray-500 text-xs mt-1">Enter exactly 10 digits</p>
                            </div>
                        </div>

                        <!-- Country -->
                        <div class="space-y-2">
                            <label for="country" class="block text-gray-700 font-semibold text-sm">
                                <i class="fas fa-globe text-blue-600 mr-2"></i>Country
                            </label>
                            <select id="country" name="country"
                                class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                required>
                                <option value="">Select country</option>
                                <option value="India">India</option>
                                <option value="United States">United States</option>
                                <option value="Canada">Canada</option>
                                <option value="United Kingdom">United Kingdom</option>
                                <option value="Australia">Australia</option>
                            </select>
                        </div>

                        <!-- Default Address Checkbox -->
                        <div class="flex items-center space-x-3 p-4 bg-gray-50 rounded-xl">
                            <input type="checkbox" id="isDefault" name="isDefault"
                                class="w-5 h-5 text-blue-600 rounded focus:ring-blue-500">
                            <label for="isDefault" class="text-gray-700 font-medium">
                                <i class="fas fa-star text-yellow-500 mr-2"></i>Set as default address
                            </label>
                        </div>

                        <!-- Action Buttons -->
                        <div class="flex space-x-3 pt-4">
                            <button type="button" onclick="closeAddAddressModal()"
                                class="flex-1 bg-gray-200 text-gray-800 px-6 py-3 rounded-xl hover:bg-gray-300 transition duration-300 font-medium">
                                Cancel
                            </button>
                            <button type="submit"
                                class="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:from-blue-700 hover:to-purple-700 transition duration-300 font-medium">
                                <i class="fas fa-save mr-2"></i>Save Address
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Edit Address Modal -->
            <div id="editAddressModal"
                class="hidden fixed inset-0 bg-black bg-opacity-50 modal-backdrop flex items-center justify-center z-50 p-4">
                <div
                    class="bg-white rounded-2xl p-8 w-full max-w-lg shadow-2xl transform transition-all max-h-[90vh] overflow-y-auto">
                    <div class="text-center mb-6">
                        <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-edit text-green-600 text-2xl"></i>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-800">Edit Address</h3>
                        <p class="text-gray-600 mt-2">Update your address information</p>
                    </div>

                    <form id="editAddressForm" class="space-y-6" enctype="application/x-www-form-urlencoded">
                        <input type="hidden" id="editAddressId" name="id">


                        <!-- Address Type -->
                        <div class="space-y-2">
                            <label class="block text-gray-700 font-semibold text-sm uppercase tracking-wide">Address
                                Type</label>
                            <div class="grid grid-cols-3 gap-3">
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="editType" value="home" class="sr-only">
                                    <div class="text-center">
                                        <i class="fas fa-home text-green-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Home</p>
                                    </div>
                                </label>
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="editType" value="work" class="sr-only">
                                    <div class="text-center">
                                        <i class="fas fa-building text-blue-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Work</p>
                                    </div>
                                </label>
                                <label
                                    class="flex items-center justify-center p-3 border-2 border-gray-200 rounded-xl cursor-pointer hover:border-blue-300 transition duration-300">
                                    <input type="radio" name="editType" value="other" class="sr-only">
                                    <div class="text-center">
                                        <i class="fas fa-map-marker-alt text-purple-600 text-xl mb-1"></i>
                                        <p class="text-sm font-medium">Other</p>
                                    </div>
                                </label>
                            </div>
                        </div>

                        <!-- Street Address -->
                        <div class="space-y-2">
                            <label for="editStreet" class="block text-gray-700 font-semibold text-sm">
                                <i class="fas fa-road text-blue-600 mr-2"></i>Street Address
                            </label>
                            <input type="text" id="editStreet" name="street"
                                class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                placeholder="Enter street address" required>
                        </div>

                        <!-- City and State -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="space-y-2">
                                <label for="editCity" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-city text-blue-600 mr-2"></i>City
                                </label>
                                <input type="text" id="editCity" name="city"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter city" required>
                            </div>
                            <div class="space-y-2">
                                <label for="editState" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-map text-blue-600 mr-2"></i>State
                                </label>
                                <input type="text" id="editState" name="state"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter state" required>
                            </div>
                        </div>

                        <!-- pin and Phone Number -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="space-y-2">
                                <label for="editpin" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-mail-bulk text-blue-600 mr-2"></i>Pin Code
                                </label>
                                <input type="text" id="editpin" name="pin"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="Enter pin code" required>
                            </div>
                            <div class="space-y-2">
                                <label for="editPhone" class="block text-gray-700 font-semibold text-sm">
                                    <i class="fas fa-phone-alt text-blue-600 mr-2"></i>Phone Number
                                </label>
                                <input type="tel" id="editPhone" name="phone"
                                    class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                    placeholder="e.g., 9876543210" pattern="[0-9]{10}" required
                                    oninvalid="this.setCustomValidity('Please enter a 10-digit phone number (e.g., 9876543210)')"
                                    oninput="this.setCustomValidity('')">
                                <p class="text-gray-500 text-xs mt-1">Enter exactly 10 digits</p>
                            </div>
                        </div>

                        <!-- Country -->
                        <div class="space-y-2">
                            <label for="editCountry" class="block text-gray-700 font-semibold text-sm">
                                <i class="fas fa-globe text-blue-600 mr-2"></i>Country
                            </label>
                            <select id="editCountry" name="country"
                                class="w-full p-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition duration-300 input-focus"
                                required>
                                <option value="">Select country</option>
                                <option value="India">India</option>
                                <option value="United States">United States</option>
                                <option value="Canada">Canada</option>
                                <option value="United Kingdom">United Kingdom</option>
                                <option value="Australia">Australia</option>
                            </select>
                        </div>

                        <!-- Action Buttons -->
                        <div class="flex space-x-3 pt-4">
                            <button type="button" onclick="closeEditAddressModal()"
                                class="flex-1 bg-gray-200 text-gray-800 px-6 py-3 rounded-xl hover:bg-gray-300 transition duration-300 font-medium">
                                Cancel
                            </button>
                            <button type="submit"
                                class="flex-1 bg-gradient-to-r from-green-600 to-blue-600 text-white px-6 py-3 rounded-xl hover:from-green-700 hover:to-blue-700 transition duration-300 font-medium">
                                <i class="fas fa-save mr-2"></i>Update Address
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <script>
                // Radio button styling
                document.addEventListener('DOMContentLoaded', function () {
                    const radioGroups = document.querySelectorAll('input[type="radio"]');
                    radioGroups.forEach(radio => {
                        radio.addEventListener('change', function () {
                            const groupName = this.name;
                            document.querySelectorAll(`input[name="${groupName}"]`).forEach(input => {
                                input.closest('label').classList.remove('border-blue-500', 'bg-blue-50');
                            });
                            if (this.checked) {
                                this.closest('label').classList.add('border-blue-500', 'bg-blue-50');
                            }
                        });
                        // Initialize checked radio styling
                        if (radio.checked) {
                            radio.closest('label').classList.add('border-blue-500', 'bg-blue-50');
                        }
                    });
                });

                function openAddAddressModal() {
                    document.getElementById('addAddressModal').classList.remove('hidden');
                    document.body.style.overflow = 'hidden';
                }

                function closeAddAddressModal() {
                    document.getElementById('addAddressModal').classList.add('hidden');
                    document.getElementById('addAddressForm').reset();
                    document.body.style.overflow = 'auto';
                    document.querySelectorAll('input[name="type"]').forEach(input => {
                        input.closest('label').classList.remove('border-blue-500', 'bg-blue-50');
                    });
                    document.querySelector('input[name="type"][value="home"]').closest('label').classList.add('border-blue-500', 'bg-blue-50');
                }

                function openEditAddressModal(id, street, city, state, pin, country, type, phone) {

                    document.getElementById('editAddressId').value = id;
                    document.getElementById('editStreet').value = street;
                    document.getElementById('editCity').value = city;
                    document.getElementById('editState').value = state;
                    document.getElementById('editpin').value = pin;
                    document.getElementById('editCountry').value = country;
                    document.getElementById('editPhone').value = phone;

                    document.querySelectorAll('input[name="editType"]').forEach(input => {
                        input.closest('label').classList.remove('border-blue-500', 'bg-blue-50');
                    });
                    document.querySelector(`input[name="editType"][value="${type}"]`).checked = true;
                    document.querySelector(`input[name="editType"][value="${type}"]`).closest('label').classList.add('border-blue-500', 'bg-blue-50');

                    document.getElementById('editAddressModal').classList.remove('hidden');
                    document.body.style.overflow = 'hidden';
                }

                function closeEditAddressModal() {
                    document.getElementById('editAddressModal').classList.add('hidden');
                    document.getElementById('editAddressForm').reset();
                    document.body.style.overflow = 'auto';
                    document.querySelectorAll('input[name="editType"]').forEach(input => {
                        input.closest('label').classList.remove('border-blue-500', 'bg-blue-50');
                    });
                }



                document.getElementById('addAddressModal').addEventListener('click', function (e) {
                    if (e.target === this) {
                        closeAddAddressModal();
                    }
                });

                document.getElementById('editAddressModal').addEventListener('click', function (e) {
                    if (e.target === this) {
                        closeEditAddressModal();
                    }
                });

                // Form submissions
                document.getElementById('addAddressForm').addEventListener('submit', async function (event) {
                    event.preventDefault();
                    if (!this.checkValidity()) {
                        this.reportValidity();
                        return;
                    }

                    Swal.fire({
                        title: 'Adding Address...',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    try {
                        const form = event.target;
                        const formData = new FormData(form);
                        const data = Object.fromEntries(formData);
                        console.log('Sending form data:', data);

                        const response = await fetch('/add-address', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });
                        const result = await response.json();

                        if (response.ok) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'Address added successfully!',
                                icon: 'success',
                                confirmButtonColor: '#3B82F6'
                            }).then(() => {
                                closeAddAddressModal();
                                location.reload();
                            });
                        } else {
                            throw new Error(result.message || 'Failed to add address');
                        }
                    } catch (error) {
                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonColor: '#EF4444'
                        });
                    }
                });

                document.getElementById('editAddressForm').addEventListener('submit', async function (event) {
                    event.preventDefault();
                    if (!this.checkValidity()) {
                        this.reportValidity();
                        return;
                    }

                    Swal.fire({
                        title: 'Updating Address...',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    try {
                        const form = event.target;
                        const formData = new FormData(form);
                        const data = Object.fromEntries(formData);
                        console.log('Sending form data:', data);

                        const response = await fetch('/update-address', {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });
                        const result = await response.json();

                        if (response.ok) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'Address updated successfully!',
                                icon: 'success',
                                confirmButtonColor: '#3B82F6'
                            }).then(() => {
                                closeEditAddressModal();
                                location.reload();
                            });
                        } else {
                            throw new Error(result.message || 'Failed to update address');
                        }
                    } catch (error) {
                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonColor: '#EF4444'
                        });
                    }
                });


                //   function deleteAddress(id) {
                //         Swal.fire({
                //             title: 'Delete Address?',
                //             text: 'Are you sure you want to delete this address? This action cannot be undone.',
                //             icon: 'warning',
                //             showCancelButton: true,
                //             confirmButtonText: 'Yes, delete it!',
                //             cancelButtonText: 'Keep address',
                //             confirmButtonColor: '#EF4444',
                //             cancelButtonColor: '#6B7280'
                //         }).then((result) => {
                //             if (result.isConfirmed) {
                //                 Swal.fire({
                //                     title: 'Deleting Address...',
                //                     allowOutsideClick: false,
                //                     didOpen: () => {
                //                         Swal.showLoading();
                //                     }
                //                 });
                //                 setTimeout(() => {
                //                     Swal.fire({
                //                         title: 'Deleted!',
                //                         text: 'Address has been deleted successfully.',
                //                         icon: 'success',
                //                         confirmButtonColor: '#3B82F6'
                //                     }).then(() => {
                //                         location.reload();
                //                     });
                //                 }, 1500);
                //             }
                //         });
                //     }

                function deleteAddress(userId, addressId) {
    Swal.fire({
        title: 'Delete Address?',
        text: 'Are you sure you want to delete this address? This action cannot be undone.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Keep address',
        confirmButtonColor: '#EF4444',
        cancelButtonColor: '#6B7280'
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                title: 'Deleting Address...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            fetch('/delete-address', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userId, addressId })
            })
            .then(response =>
                response.json().then(data => ({
                    ok: response.ok,
                    status: response.status,
                    body: data
                }))
            )
            .then(({ ok, body }) => {
                if (ok) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: body.message || 'Address has been deleted successfully.',
                        icon: 'success',
                        confirmButtonColor: '#3B82F6'
                    }).then(() => location.reload());
                } else {
                    throw new Error(body.message || 'Failed to delete address.');
                }
            })
            .catch(error => {
                Swal.fire({
                    title: 'Error!',
                    text: error.message || 'An error occurred while deleting the address.',
                    icon: 'error',
                    confirmButtonColor: '#EF4444'
                });
            });
        }
    });
}

            </script>
</body>

</html>