<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eon Forge - Payment Failed</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'inter': ['Inter', 'sans-serif'],
                        'playfair': ['Playfair Display', 'serif'],
                    },
                    colors: {
                        'primary': '#1a1a1a',
                        'accent': '#d4af37',
                        'accent-light': '#f4e4a6',
                        'cream': '#fefdfb',
                        'warm-gray': '#f8f7f4',
                        'text-primary': '#2d2d2d',
                        'text-secondary': '#6b7280',
                        'error-red': '#ef4444',
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-up': 'slideUp 0.3s ease-out',
                        'pulse-subtle': 'pulseSubtle 2s infinite',
                        'shake': 'shake 0.5s ease-in-out',
                    }
                }
            }
        }
    </script>
    
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes slideUp {
            from { transform: translateY(10px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        
        @keyframes pulseSubtle {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .gradient-bg {
            background: linear-gradient(135deg, #fefdfb 0%, #f8f7f4 100%);
        }
        
        .glass-effect {
            backdrop-filter: blur(15px);
            background: rgba(255, 255, 255, 0.95);
        }
        
        .premium-shadow {
            box-shadow: 0 20px 40px -12px rgba(0, 0, 0, 0.08);
        }

        .btn-primary {
            background: linear-gradient(135deg, #d4af37 0%, #f4e4a6 100%);
            color: #1a1a1a;
            font-weight: 600;
            padding: 0.875rem 2rem;
            border-radius: 0.75rem;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px -5px rgba(212, 175, 55, 0.5);
        }

        .btn-secondary {
            background: #f8fafc;
            color: #64748b;
            border: 2px solid #e2e8f0;
            font-weight: 500;
            padding: 0.875rem 2rem;
            border-radius: 0.75rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
            animation: pulseSubtle 2s infinite;
        }

        .btn-secondary:hover {
            background: #f1f5f9;
            border-color: #cbd5e1;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px -5px rgba(0, 0, 0, 0.1);
        }

        .btn-tertiary {
            color: #d4af37;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
        }

        .btn-tertiary:hover {
            background: rgba(212, 175, 55, 0.1);
            transform: translateY(-1px);
        }

        .step-indicator {
            position: relative;
        }

        .step-indicator::after {
            content: '';
            position: absolute;
            top: 50%;
            right: -50%;
            width: 100%;
            height: 2px;
            background: #e5e7eb;
            transform: translateY(-50%);
        }

        .step-indicator.completed::after {
            background: linear-gradient(90deg, #d4af37, #f4e4a6);
        }

        .step-indicator:last-child::after {
            display: none;
        }

        .error-icon {
            animation: shake 0.5s ease-in-out;
        }
    </style>
</head>
<body class="gradient-bg font-inter min-h-screen">
    <!-- Progress Steps -->
    <div class="bg-white/90 backdrop-blur-sm border-b border-gray-100 sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-4 py-4">
            <div class="flex items-center justify-center space-x-4 md:space-x-8">
                <div class="step-indicator completed flex items-center space-x-2">
                    <div class="w-8 h-8 bg-accent rounded-full flex items-center justify-center shadow-lg">
                        <i class="fas fa-check text-white text-sm"></i>
                    </div>
                    <span class="text-sm font-medium text-accent hidden sm:inline">Cart</span>
                </div>
                <div class="step-indicator completed flex items-center space-x-2">
                    <div class="w-8 h-8 bg-accent rounded-full flex items-center justify-center shadow-lg">
                        <span class="text-white text-sm font-bold">2</span>
                    </div>
                    <span class="text-sm font-medium text-accent hidden sm:inline">Checkout</span>
                </div>
                <div class="step-indicator flex items-center space-x-2">
                    <div class="w-8 h-8 bg-error-red rounded-full flex items-center justify-center">
                        <i class="fas fa-times text-white text-sm"></i>
                    </div>
                    <span class="text-sm font-medium text-error-red hidden sm:inline">Payment</span>
                </div>
                <div class="step-indicator flex items-center space-x-2">
                    <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                        <span class="text-gray-500 text-sm font-bold">4</span>
                    </div>
                    <span class="text-sm font-medium text-gray-500 hidden sm:inline">Confirmation</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-12 animate-fade-in">
        <div class="glass-effect rounded-2xl p-6 md:p-8 premium-shadow border border-white/20 grid grid-cols-1 lg:grid-cols-2 gap-6 items-center">
            <!-- Illustration -->
            <div class="flex justify-center lg:justify-center">
                <div class="w-40 h-40 md:w-56 md:h-56 bg-accent/10 rounded-full flex items-center justify-center animate-pulse-subtle">
                    <i class="fas fa-exclamation-triangle text-6xl md:text-8xl text-error-red error-icon"></i>
                </div>
            </div>
            <!-- Content -->
            <div class="text-center lg:text-left space-y-6">
                <h1 class="text-3xl md:text-4xl font-playfair font-bold text-primary">Payment Failed</h1>
                <p class="text-text-secondary text-base md:text-lg">
                    We're sorry, your payment could not be processed.
                    <% if (errorMessage) { %>
                        <span class="block font-medium mt-2">Reason: <%= errorMessage %></span>
                    <% } else { %>
                        <span class="block mt-2">Please try again or review your cart for blocked or out-of-stock items.</span>
                    <% } %>
                   
                </p>
                <div class="space-y-4">
                    <p class="text-text-secondary text-sm">Common reasons for payment failure:</p>
                    <ul class="text-text-secondary text-sm list-disc list-inside space-y-1">
                        <li>Incorrect card details or expired card</li>
                        <li>Insufficient funds or bank restrictions</li>
                        <li>Network issues or session timeout</li>
                        <li>Blocked or out-of-stock items in cart</li>
                    </ul>
                </div>
               <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start items-center">
                   <!-- Retry Payment Button -->
                   <button id="retryPaymentBtn" class="btn-primary flex items-center gap-2 px-5 py-3">
                     <span>Retry Payment</span>
                     <i class="fas fa-redo"></i>
                   </button>
                 
                   <!-- View Orders Button -->
                   <a href="/orders" class="btn-secondary flex items-center gap-2 px-5 py-3">
                     <i class="fas fa-box"></i>
                     <span>View Your Orders</span>
                   </a>
                 </div>
                 
                <div class="text-center lg:text-left">
                    <a href="/contact" class="btn-tertiary">
                        <i class="fas fa-headset"></i>
                        <span>Contact Support</span>
                    </a>
                </div>
            </div>
        </div>
    </main>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.getElementById('retryPaymentBtn').addEventListener('click', async () => {
  const btn = document.getElementById('retryPaymentBtn');
  const razorpayOrderId = new URLSearchParams(window.location.search).get('razorpayOrderId');

  try {
    btn.disabled = true;
    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Retrying...';

    // 🔁 Request new Razorpay order
    const res = await fetch('/payment/retry-order', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ razorpayOrderId })
    });

    const data = await res.json();
    const newRazorpayOrderId=data.order_id;
    

    console.log('anything data:',data)
    console.log('anything orderId:',data.order_id)
    if (!res.ok || !data.success) throw new Error(data.message || 'Failed to retry order');

    // 🧾 Razorpay checkout options
   // 🧾 Razorpay checkout options
const options = {
  key: data.key_id,
  amount: data.amount,
  currency: data.currency,
  name: 'Eon Forge',
  description: 'Retry Payment',
  order_id: data.order_id,
  handler: async function (response) {
     
    try {
      // ✅ verify payment
      const verifyRes = await fetch('/payment/verify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
        razorpay_order_id: response.razorpay_order_id,
        razorpay_payment_id: response.razorpay_payment_id,
        razorpay_signature: response.razorpay_signature,
        
        cartItems: data.cartItems,
        address: {
           addressType: data.address.addressType,
           street: data.address.street,
           city: data.address.city,
           state: data.address.state,
           pin: data.address.pin,
           country: data.address.country,
           phone: data.address.phone,
           isDefault: data.address.isDefault
         },
        paymentMethod: data.paymentMethod,
        subtotal: data.subtotal,
        deliveryFee: data.deliveryFee,
        coupon: data.coupon,
        totalAmount: data.totalAmount
         })

      });

      const verifyData = await verifyRes.json();
      console.log('verifydata:', verifyData);

      if (verifyRes.ok && verifyData.success) {
        window.location.href = `/place-order?razorpayOrderId=${newRazorpayOrderId}`;
      }
    } catch (err) {
      console.error('Verification error:', err);
      window.location.href = `/payment-failure?razorpayOrderId=${newRazorpayOrderId}&error=${encodeURIComponent(err.message)}`;
    }
  },
  modal: {
    ondismiss: function () {
      console.log('Payment modal closed by user');
       window.location.reload(); 
    }
  }
};

const rzp = new Razorpay(options);

// 🧩 ⬇️ Add this listener here before opening the payment modal
rzp.on('payment.failed', function (response) {

  window.location.href = `/payment-failure?razorpayOrderId=${newRazorpayOrderId}&error=${encodeURIComponent(response.error.description)}`;
});

// 🧾 Open Razorpay payment modal
rzp.open();


  } catch (err) {
    console.error('catch error',err);
    
  } finally {
    btn.disabled = false;
    btn.innerHTML = '<i class="fas fa-redo"></i> Retry Payment';
  }
});

</script>


</body>
</html>