<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Change Email | Eon Forge</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          animation: {
            'float': 'float 6s ease-in-out infinite',
            'glow': 'glow 2s ease-in-out infinite alternate',
            'slide-up': 'slideUp 0.5s ease-out',
            'fade-in': 'fadeIn 0.6s ease-out',
          },
          keyframes: {
            float: {
              '0%, 100%': { transform: 'translateY(0px)' },
              '50%': { transform: 'translateY(-10px)' },
            },
            glow: {
              '0%': { boxShadow: '0 0 20px rgba(251, 191, 36, 0.5)' },
              '100%': { boxShadow: '0 0 30px rgba(251, 191, 36, 0.8)' },
            },
            slideUp: {
              '0%': { transform: 'translateY(20px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            },
            fadeIn: {
              '0%': { opacity: '0' },
              '100%': { opacity: '1' },
            }
          }
        }
      }
    }
  </script>
  <style>
    body { 
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      position: relative;
      overflow-x: hidden;
    }
    
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url('https://images.unsplash.com/photo-1542496658-e33a6d0d50f6?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80') no-repeat center center;
      background-size: cover;
      opacity: 0.3;
      z-index: -1;
    }
    
    .glass-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);
    }
    
    .input-glass {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
    }
    
    .input-glass:focus {
      background: rgba(255, 255, 255, 0.15);
      border-color: rgba(251, 191, 36, 0.5);
      transform: translateY(-2px);
    }
    
    .btn-gradient {
      background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 50%, #d97706 100%);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .btn-gradient::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.5s;
    }
    
    .btn-gradient:hover::before {
      left: 100%;
    }
    
    .btn-gradient:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(251, 191, 36, 0.4);
    }
    
    .floating-shapes {
      position: fixed;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: -1;
    }
    
    .shape {
      position: absolute;
      opacity: 0.1;
      animation: float 8s ease-in-out infinite;
    }
    
    .shape:nth-child(1) {
      top: 20%;
      left: 10%;
      animation-delay: 0s;
    }
    
    .shape:nth-child(2) {
      top: 60%;
      right: 10%;
      animation-delay: 2s;
    }
    
    .shape:nth-child(3) {
      bottom: 20%;
      left: 20%;
      animation-delay: 4s;
    }
  </style>
</head>
<body class="min-h-screen flex items-center justify-center p-4">
  <!-- Floating Background Shapes -->
  <div class="floating-shapes">
    <div class="shape w-32 h-32 bg-white rounded-full"></div>
    <div class="shape w-24 h-24 bg-amber-300 rounded-full"></div>
    <div class="shape w-40 h-40 bg-white rounded-full"></div>
  </div>

  <!-- Main Container -->
  <div class="w-full max-w-lg animate-fade-in">
    <!-- Glassmorphism Card -->
    <div class="glass-card rounded-3xl overflow-hidden shadow-2xl animate-slide-up">
      <!-- Decorative Header -->
      <div class="relative">
        <div class="h-2 bg-gradient-to-r from-amber-400 via-orange-500 to-red-500"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-amber-400 via-orange-500 to-red-500 opacity-50 blur-sm"></div>
      </div>

      <!-- Content -->
      <div class="p-8 sm:p-12">
        <!-- Logo Section -->
        <div class="text-center mb-8">
          <div class="inline-flex items-center justify-center w-20 h-20 mb-6 animate-float">
            <div class="relative">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white drop-shadow-lg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <div class="absolute inset-0 bg-amber-400 rounded-full opacity-20 animate-glow"></div>
            </div>
          </div>
          <h1 class="text-4xl sm:text-5xl font-bold text-white mb-3 tracking-tight">
            Eon <span class="text-amber-300">Forge</span>
          </h1>
          <p class="text-lg text-white/80 font-light">Update your account email address</p>
        </div>

        <!-- Form -->
        <form id="forgotForm" class="space-y-6">
          <!-- Message Display -->
          <div id="messageContainer" class="hidden">
            <div id="messageElement" class="text-center text-sm font-medium p-3 rounded-xl backdrop-blur-sm"></div>
          </div>

          <!-- Email Input -->
          <div class="space-y-3">
            <label for="email" class="block text-lg font-semibold text-white/90">
              Current Email Address
            </label>
            <div class="relative group">
              <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none z-10">
                <svg class="h-6 w-6 text-white/60 group-focus-within:text-amber-300 transition-colors" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
              </div>
              <input
                type="email"
                id="email"
                name="email"
                placeholder="your.current@email.com"
                class="input-glass text-white placeholder-white/50 block w-full pl-12 pr-4 py-4 text-lg rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-400/50"
                autocomplete="email"
              />
            </div>
          </div>

          <!-- Submit Button -->
          <button
            type="submit"
            id="submitBtn"
            class="btn-gradient w-full py-4 px-6 rounded-xl text-lg font-bold text-gray-900 shadow-lg focus:outline-none focus:ring-2 focus:ring-amber-300 focus:ring-offset-2 focus:ring-offset-transparent disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            <span id="btnText">Update Email Address</span>
            <svg id="loadingIcon" class="hidden animate-spin -ml-1 mr-3 h-5 w-5 text-gray-900 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </button>
        </form>

        <!-- Back Link -->
        <div class="mt-8 text-center">
          <a href="/editProfile" class="inline-flex items-center text-white/80 hover:text-white text-lg font-medium transition-all duration-200 hover:transform hover:scale-105">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back to Profile Settings
          </a>
        </div>
      </div>
    </div>

    <!-- Additional Info Card -->
    <div class="mt-6 glass-card rounded-2xl p-6 text-center">
      <div class="flex items-center justify-center mb-3">
        <svg class="h-6 w-6 text-amber-300 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <span class="text-white font-semibold">Security Notice</span>
      </div>
      <p class="text-white/70 text-sm leading-relaxed">
        A verification code will be sent to your new email address. Please check your inbox and spam folder.
      </p>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('forgotForm');
      const messageContainer = document.getElementById('messageContainer');
      const messageEl = document.getElementById('messageElement');
      const emailInput = document.getElementById('email');
      const submitBtn = document.getElementById('submitBtn');
      const btnText = document.getElementById('btnText');
      const loadingIcon = document.getElementById('loadingIcon');

      // Show message function
      function showMessage(message, isSuccess = false) {
        messageContainer.classList.remove('hidden');
        messageEl.classList.remove('text-green-400', 'text-red-400', 'bg-green-500/20', 'bg-red-500/20');
        
        if (isSuccess) {
          messageEl.classList.add('text-green-400', 'bg-green-500/20');
        } else {
          messageEl.classList.add('text-red-400', 'bg-red-500/20');
        }
        
        messageEl.textContent = message;
        messageContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
      }

      // Hide message function
      function hideMessage() {
        messageContainer.classList.add('hidden');
      }

      // Loading state functions
      function setLoading(loading) {
        if (loading) {
          submitBtn.disabled = true;
          btnText.textContent = 'Processing...';
          loadingIcon.classList.remove('hidden');
          submitBtn.classList.add('opacity-70', 'cursor-not-allowed');
        } else {
          submitBtn.disabled = false;
          btnText.textContent = 'Update Email Address';
          loadingIcon.classList.add('hidden');
          submitBtn.classList.remove('opacity-70', 'cursor-not-allowed');
        }
      }

      // Input validation
      emailInput.addEventListener('input', () => {
        if (messageContainer.classList.contains('hidden') === false) {
          hideMessage();
        }
      });

      // Form submission
      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const email = emailInput.value.trim();

        // Validation
        if (!email) {
          showMessage('Email address is required.');
          emailInput.focus();
          return;
        }

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          showMessage('Please enter a valid email address.');
          emailInput.focus();
          return;
        }

        setLoading(true);

        try {
          const response = await fetch('/change-email', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email }),
          });

          const result = await response.json();

          if (result.success) {
            showMessage(result.message || 'Verification code sent successfully!', true);
            setTimeout(() => {
              window.location.href = result.redirectUrl || '/change-email-otp';
            }, 1500);
          } else {
            showMessage(result.message || 'Failed to send verification code. Please try again.');
            setLoading(false);
          }
        } catch (error) {
          console.error('Network error:', error);
          showMessage('Network error. Please check your connection and try again.');
          setLoading(false);
        }
      });
    });
  </script>
</body>
</html>